{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my site","text":"<p>Hello   welcome to my site   its time to select the lang   please select one of these 2 buttons and i will redirect u to your lang   - English   - Spanish </p> <p>dont forget to follow me on Github  or contact me using Telegram with my email (gkartyt@gmail.com)   or if u are interested visit my Linkedin  Thanks for watching this page     </p> <p></p>"},{"location":"en/","title":"Welcome to FPSensor page","text":"<p>Hello, i am Gonzalo Daroqui, i am a developer from argentina that does android development and also studying.    in this page u can find:    - Android Build Guide  - Git Guide</p>"},{"location":"en/build/","title":"The android build guide","text":"<p>on this guide i will explain u how to find device trees, prepare the env, requeriments, and more    </p>"},{"location":"en/build/#reqs","title":"Reqs","text":"<ul> <li>64bit decent cpu    </li> <li>32GB of RAM    </li> <li>500GB+ space (SSD recommended)    </li> <li>a good internet (or much patienceand a very stable internet)    </li> <li>common sense    </li> <li>a bit of knowledge of linux terminal    </li> </ul> <p>can u use lowest specifications? ye, these ae the most recommended but u can try others. u can by example to use a lot of swap or waiting 3 days to the rom to be compiled but with these specifications u can be sure that u wont have problems   anothehr recomendation is that if u are going to make a PC to buildalways search AMD, the compilation is a work that uses the whole CPU at the same time and on long periods and for that a good AMD multicore is the best    </p>"},{"location":"en/build/#recomendations","title":"recomendations","text":"<ul> <li>do just Lineage     <ul> <li>for the first try i recommend u that u try a simple rom, dont try aospa, aosp, etc. do a rom that all of us know that works well    </li> </ul> </li> <li>learn git <ul> <li>its not necesary to make the rom but u will need it wen u want to do changes and u dont want to push commits without author and \"update x.x\" if u dont want the community hates u    </li> </ul> </li> <li>dont ask for mainteinership    <ul> <li>u did your rom? congrats, but u still have to learn a lot to be a maintainer of a rom, a maintainer is a person that can update the rom constantly and can fix reported bugs reading logs and making changes in trees. u dont want that the creators of the rom to put u in a blacklist    </li> </ul> </li> </ul>"},{"location":"en/build/#getting-server","title":"getting server","text":"<p>if u dont have the specs mentioned before u will need a server   for that we have some options     </p> <ul> <li>buy a server    <ul> <li>since no one of server sellers  promote me i wont send u anyone but its really easy to find a server seller in telegram, they usually manages on paypal    </li> </ul> </li> <li>Google Cloud Platform Free triel <ul> <li>make a new google account since wen u have 0 credits u have to delete it    </li> <li>u need a credit card (dw, no costs at all)    </li> </ul> </li> </ul>"},{"location":"en/build/#getting-device-trees","title":"getting device trees","text":"<p>doesnt makes sense that we sync a rom if there is not device trees for my device so the next step is to look for a device tree   how we plan to do that?    </p> <p>first try, XDA    i have a Xiaomi Redmi Note 7 [lavender]   now we will ook for the xda   Redmi note 7 XDA   now in the xda    we will search for the topic roms or android development    now if there are we will search for lineage os or based roms    then we will search for kernel source (it will be always since its GPLv2 req)    </p> <p>xda has no luck?   lets try another   go to github.com    go to search button and search kernel_brand_device(or _soc ex ssm660)     </p> <p>if u found your kernel tree then lets come with the next step   if u have no luck then can contact me to see if we have luck, else the guide ends here for u    </p> <p>wen we have his kernel we will go to his github profile and look for these:    </p> <ul> <li>device_brand_name    </li> <li>vendor_brand_name    </li> <li>kernel_brand_name (it can be kernel_brand_soc ex: sdm660) (that we already have)    </li> <li>device_brand_soc-common (if exist)    </li> <li>vendor_brand_soc-common (if exist)    <ul> <li>for vendor repos if u found device and kernel from lineage org then there will be on TheMuppets org probably    </li> </ul> </li> <li>hardware_brand (if exist, else we will take it from LineageOS organization)    </li> </ul> <p>in some cases it will have android_ or proprietary_, its the same, dont worry    </p> <p>if we can find a local_manifests repo very good cuz we can use it, save it cuz will be important    </p>"},{"location":"en/build/#preparing-the-env","title":"preparing the env","text":"<p>i recommend u to use Ubuntu (i use 20.04 but others should work too)</p> <pre><code>sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python\nmkdir ~/bin\nPATH=~/bin:$PATH\ncurl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo\nchmod a+x ~/bin/repo\n\n# make a github account and fil the name and email\ngit config --global user.name \ngit config --global user.email \n</code></pre>"},{"location":"en/build/#sync-the-rom","title":"sync the rom","text":"<p>we will make a directory for the rom</p> <pre><code>mkdir LineageOS\ncd LineageOS\n</code></pre> <p>we will start the rom sync    </p> <p>BUT WAIT WAIT WAIT   you got a local_manifests repo?   do this    </p> <pre><code>git clone LINK .repo/local_manifests\n</code></pre> <p>now lets sync the rom   be ready for a long time of downloading, have a good internet in that moment    </p> <pre><code>repo init -u https://github.com/LineageOS/android.git -b lineage-XX (replace XX with lineage version, should be same as tree adroid version)\nrepo sync -c --no-clone-bundle -j12 --force-sync\n</code></pre> <p>u should get a message like \"Repo sync succesfully\"    </p> <p>ok so if we had local_manifests all things we need are cloned    else we will take a look on the repos we got   i will do a command for example and then u guys will reply    </p> <p>git clone https://github.com/android_device_motorola_rhode device/motorola/rhode -b [the branch should be the same as lineage or android version]   for example   git clone https://github.com/1/android_device_xiaomi_lavender device/xiaomi/lavender -b lineage-21    </p> <p>android_device_xiaomi_lavender   in the clkone path we do this   device/xiaomi/lavender   so we ignore the android_ or the proprietary_ and we replace these _ with /   done, we have all clonned   we will do this with all the repos we found in the search of dts    </p>"},{"location":"en/build/#prepare-device-trees-for-the-rom","title":"prepare device trees for the rom","text":"<p>we will move to device/brand/devicename   if we see that xx_devicename.mk is linege_devicename.mk we will skip these next steps now we will look for AndroidProducts.mk   we will replace all xx_devicename with lineage_devicename    save and now we will search for xx_devicename.mk and rename as lineage_devicename.mk   in lineage_devicename.mk we will edit all xx_devicename with lineage_devicename   also we will replace vendor/xx with vendor/lineage   now in BoardConfig.mk or if we have a -common tree will move to the -common/BoardConfigCommon.mk   on it we will look if there is any vendor/xx definition and will replace with vendor/lineage   done, we will move back to main folder    </p>"},{"location":"en/build/#time-to-build","title":"time to build","text":"<p>we will do this on the main build directory</p> <pre><code>. build/envsetup.sh\nlunch lineage_devicename-userdebug\nm bacon\n</code></pre> <p>if everything goes well we will have the zip on out/target/product/devicename/   now test and good luck    </p>"},{"location":"en/build/#ask-me-a-question","title":"Ask me a question","text":"<p>want me to modify the guide? need help with the guide? contact me in my support group </p> <p>this guide was done with my hands, with my knowledge and never searched in another site for a reference wen writing (besides these env commands that i took from crDroid) so it may can have redaction issues, make suggestions in my group</p> <p>thank you</p>"},{"location":"en/git/","title":"Git/Github/Gitlab guide","text":"<p>this guide will help u to start with git and some commands.   its basic so dont pretend that u will be expert after this.   u should have a git account of a git site ofc.   u should had installed git already    </p>"},{"location":"en/git/#initialize-my-first-repo","title":"initialize my first repo","text":"<p>new repo    </p> <pre><code>mkdir repo\ncd repo\ngit init\n</code></pre>"},{"location":"en/git/#who-are-you","title":"who are you?","text":"<p>with the information u provided to create a account u have to fil this    </p> <pre><code>git config --global user.name\ngit config --global user.email\n</code></pre>"},{"location":"en/git/#doing-our-first-change","title":"Doing our first change","text":"<pre><code>git branch -M master\ntouch hi\necho 1 &gt; hi\ngit add hi\ngit commit -m \"first hi public release\"\n</code></pre>"},{"location":"en/git/#pushing-to-our-repo","title":"pushing to our repo","text":"<p>in our github we should make a repository with the name we want to add to it   i want to clarify that i use github cuz its the more common but its the same for all    </p> <pre><code>git remote add origin https://github.com/FPSensor/hi\ngit push -f -u origin HEAD:master\n</code></pre>"},{"location":"en/git/#first-chaper-is-done-some-things-to-clarify","title":"first chaper is done, some things to clarify","text":"<p>1: we want u to be explicit with the commits, whats modified, with file, which section of the repo, anything, even in the description u should said why u did what    2: no need to put -m on the git commit command, if u dont add -m it will open the editor, this is better for long commit messages.   3: that larger push command is only for new branches, should be another way but if u clone the repo again a \"git push\" is enough    </p>"},{"location":"en/git/#clone-a-repo","title":"clone a repo","text":"<p>as simple as \"git clone link -b branch Descargas/hola\"    </p>"},{"location":"en/git/#who-did-this","title":"who did this?","text":"<p>i took a commit from another guy, how to recognize his work?   in android comunity we dont want people that doesnt add authors to commits and u will be like trash for they (i say by previous experiences) so,    we should add who did that.   this will be applied for the previous commit, i will tell us how to do for others more later.    </p> <pre><code>git commit --amend --author=\"FPSensor &lt;gkartyt@gmail.com&gt;\"\n</code></pre> <p>but, how we got that info   i took a commit from a repo where i was looking, how we can get that?   in the commit link add .patch    this will literally make the commit a patch file, something that we will talk later about, but the point is:   we can use it to get the author, check it.    </p>"},{"location":"en/git/#i-want-a-cherry","title":"i want a cherry","text":"<p>a cherry pick is literally wen you pick commits from another repo   to do it is really simple   we have to initialize the repository where the commit is and its changes with their commit hashes:    </p> <pre><code>git remote add cherrypick https://github.com/FPSensor/FPSensor\ngit fetch cherrypick\ngit cherry-pick hfwdhuwhfuiwuihfvuiwfhefhruifhfuihiuwe\n</code></pre> <p>u can just copy the hash from the commit    i have to pick 300 commits, how?   things to have in account?   its a start commit and a end commit, everything after the first commit and before the final commit will be picked, no metter what it is    </p> <pre><code>git cherry-pick commit-start~..commit-end\n</code></pre> <p>oh, no   we got a conflict of context at hi file    </p> <p>how we look into it?   a git conflict its where git dont know what to do cuz your source and the source of the repo before that commit are different   its really simple    </p> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n======= that source with the commit applied (should appear as a hash of commit)\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; end of the confflict\n</code></pre> <p>we dont want to apply a commit cuz tons of confflicts and u are lazy?    </p> <pre><code>git cherry-pick --ship\n</code></pre>"},{"location":"en/git/#to-be-continued","title":"to be continued","text":""},{"location":"es/","title":"Bienvenido a la pagina de FPSensor","text":"<p>Hola, Soy Gonzalo Daroqui.soy un desarrollador de argentina que hace desarrollo de android y estudia En esta pagina podras encontrar:  - Guia de compilacion de Android  - Guia de Git</p>"},{"location":"es/build/","title":"Build","text":""},{"location":"es/build/#la-guia-de-compilacion-de-android","title":"La guia de compilacion de Android","text":"<p>En esta guia te explicar\u00e9 como encontrar los arboles de dispositivos, requerimientos, preparacion del entorno de compilacion y mucho mas.</p>"},{"location":"es/build/#requisitos","title":"Requisitos","text":"<ul> <li>Un procesador decente de 64Bits    </li> <li>Linux corriendo (recomiendo Ubuntu)    </li> <li>32GB de RAM    </li> <li>500GB+ HDD (recomiendo SSD)    </li> <li>un buen internet (o al menos uno muy estable durante mucho tiempo)    </li> <li>sentido com\u00fan     </li> <li>algo de conocimiento en el manejo de la terminal de linux    </li> </ul> <p>puedes usar especificaci\u00f3nes menores? si, estas son las mas recomendadas pero puedes probar otras, puedes por ejemplo utilizar una cantidad enorme de swap o esperar 3 dias para compilar una rom pero con estas especificaciones puedes estar seguro de que no tendras problemas   otra recomendacion es que si te vas a armar una pc para compiolar siempre busques AMD, la compilacion es un trabajo que exige a todo el CPU en conjunto y un buen procesador multi nucleo hace la diferencia    </p>"},{"location":"es/build/#recomendaciones","title":"Recomendaci\u00f3nes","text":"<ul> <li>Haz solo Lineage    <ul> <li>para el primer intento te recomiendo que pruebes una rom simple, no pruebes aospa, yaap y roms que no tengan bases seguras    </li> </ul> </li> <li>Aprende git <ul> <li>no es necesario para crear la rom pero lo necesitaras cuando quieras hacer cambios y no quieres publicar cambios sin autores y \"update x.x\" i no quieres que la comunidad te odie    </li> </ul> </li> <li>no pidas el puesto de mantenedor    <ul> <li>hiciste tu rom? felicidades! pero todavia tienes mucho que aprender antes de ser un mantenedor de una rom, un mantenedor es una persona que puede actualizar la rom constantemente y puede arreglar bugs leyendo registros y haciendo cambios, no quieres que los creadores de roms te pongan en una lista negra    </li> </ul> </li> </ul>"},{"location":"es/build/#consiguiendo-servidor","title":"Consiguiendo servidor","text":"<p>si no tienes las especificaciones que nombre recien necesitaras un server   para eso tenemos algunas opci\u00f3nes    </p> <ul> <li>comprar un servidor    <ul> <li>ya que ningun venddedor de servidores me promoci\u00f3na no te puedo recomendar ninguno pero es realmente facil encontrar un vendedor en telegram. ellos usualmente se manejan con paypal    </li> </ul> </li> <li>Prueba gratuita de Google Cloud Platform <ul> <li>crea una cuenta de google nueva ya que cuando te qedes sin ceditos deberas removerla    </li> <li>necesitar\u00e1s una tarjeta de credito (no te preocupes, no hay costos en absoluto)    </li> </ul> </li> </ul>"},{"location":"es/build/#consiguiendo-los-arboles-de-dispositvos","title":"consiguiendo los arboles de dispositvos","text":"<p>no tiene sentido sincronizar una rom si no hay arboles de dispositivos para mi dispositivo por lo que el proximo paso sera buscar un arbol de dispositivos    pero como planeamos conseguirlo?    </p> <p>primer inteto, XDA   Yo tengo un Xiaomi Redmi Note 7 [lavender]   ahora buscaremos su XDA   Redmi Note 7 XDA en google   ahora en el XDA   vamos a buscar por el tema de ROMs o desarrollo android   ahora si hay buscaremos por lineage o una rom basada en la misma   entonces buscaremos por las fuentes del kernel (siempre estaran disponibles por GPLv2)     </p> <p>XDA no tuvo suerte?   probemos otra cosa   ve a github.com   ve al boton de buscar y busca kernel_marca_dispositivo(o _soc ej sdm660)    </p> <p>si encontraste tus fuentes de kernel entonces continuemos con el proximo paso   si no tuviste suerte entonces puedes contactarme para ver si tenemos suerte, de lo contrario la guia termina aqui para ti    </p> <p>cuando tengamos el kernel iremos al perfil de github de la persona y buscaremos por:    </p> <ul> <li>device_marca_dispositivo    </li> <li>vendor_marca_dispositivo    </li> <li>kernel_marca_dispositivo (tambien puede ser kernel_marca_soc ej: sdm660) (que ya lo tenemos)    </li> <li>device_marca_soc-common (si existe)    </li> <li>vendor_marca_soc-common (si existe)    <ul> <li>por los repositorios de vendor si encontraste los arboles de dispositivo y kernel en la organizacion de lineage estaran en la organizacion TheMuppets     </li> </ul> </li> <li>hardware_marca (si existe, de lo contrario lo tomaremos de la organizaci\u00f3n de LineageOS)    </li> </ul> <p>en algunos casos los repositorios tendran android_ o proprietary_, es lo mismo, no te preocupes    </p> <p>si logramos encontrar un repo local_manifests muy bien, porque lo podremos usar pronto. guardalo, podria ser importante    </p>"},{"location":"es/build/#preparando-el-entorno","title":"preparando el entorno","text":"<p>yo te recomiendo Ubuntu (yo uso 20.04 pero otros deberian funci\u00f3nar)</p> <pre><code>sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multil&gt;\nmkdir ~/bin\nPATH=~/bin:$PATH\ncurl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo\nchmod a+x ~/bin/repo\n\n# crea una cuenta de github y completa el nombre y email\ngit config --global user.name \ngit config --global user.email \n</code></pre>"},{"location":"es/build/#sincronizar-la-rom","title":"sincronizar la rom","text":"<p>haremos un directorio para la rom</p> <pre><code>mkdir LineageOS\ncd LineageOS\n</code></pre> <p>iniciaremos la sincronizacion de la rom:    </p> <p>ESPERA ESPERA ESPERA   tienes un local_manifests?   haz sto    </p> <pre><code>git clone LINK .repo/local_manifests\n</code></pre> <p>ahoa vamos a sincronizar la rom   preparate para un largo tiempo de descarga, ten un buen internet en ese momento    </p> <pre><code>repo init -u https://github.com/LineageOS/android.git -b lineage-XX (replace XX wi&gt;\nrepo sync -c --no-clone-bundle -j12 --force-sync\n</code></pre> <p>deberias obtener un mensaje \"repo sync succesfully\"    </p> <p>ok entonces, si tenemos local_manifests todo lo que necesitamos ya deberia estar clonado   de lo contrario vamos a mirar en los repositorios que obtuvimos   hare un comando de ejemplo y ustedes repetiran    </p> <p>git clone https://github.com/android_device_motorola_rhode device/motorola/rhode -b lineage-21 [la rama debe ser la misma que la de lineage or la versi\u00f3n de android]   por ejemplo   git clone https://github.com/android_device_xiaomi_lavender device/xiaomi/lavender -b lineage-21    </p> <p>android_device_xiaomi_lavender    en la ruta de descarga ponemos esto    device/xiaomi/lavender   entonces ignoramos el android_ o proprietary_ y reemplazamos los _ con /   repetiremos esto con todos los repositorios que encontramos en el paso de la busqueda de los arboles de dispositivos    </p>"},{"location":"es/build/#preparar-los-arboles-de-dispositivos-para-la-rom","title":"preparar los arboles de dispositivos para la rom","text":"<p>nos moveremos a device/marca/devicename   si vemos que xx_devicename.mk es lineage_devicename.mk omitiremos los siguientes pasos   ahora buscaremos el archivo AndroidProducts.mk   dentro reemplazaremos todos los xx_devicename por lineage_devicename   guardaremos y nos moveremos a xx_devicename.mk el cual renombraremos como lineage_devicename   dentro de lineage_devicename.mk editaremos todos l\u00f1os xx_devicename por lineage_devicename   ademas reemplazaremos vendor/xx por vendor/lineage   ahora en BoardConfig.mk o si tenemos -common nos moveremos al -common/BoardConfigCommon.mk   dentro verificaremos si hay alguna definicion de vendor/xx y la cambiaremos a vendor/lineage    </p>"},{"location":"es/build/#momento-de-compilar","title":"momento de compilar","text":"<p>haremos esto en el directorio principal de la rom:</p> <pre><code>. build/envsetup.sh\nlunch lineage_devicename-userdebug\nm bacon\n</code></pre> <p>si todo va bien tendremos el zip en out/target/product/devicename/   ahora prueba y buena suerte    </p>"},{"location":"es/build/#hazme-una-pregunta","title":"hazme una pregunta","text":"<p>quieres que modifique la guia? necesitas ayuda con la guia? contactame en mi Telegram </p> <p>esta guia fue escrita con mis propias manos, con mi conocimiento y nunca busque en otro sitio para referencia mientras escribia (exeptuando los comandos de entorno que los tome de crDroid) por lo que puede tener problemas de redacci\u00f3n, haz sugerencias en mi grupo    </p> <p>muchas gracias</p>"},{"location":"es/git/","title":"Guia para Git/Github/Gitlab","text":"<p>esta guia te ayudar\u00e1 para empezar con git y algunos comandos   es basica por lo que no debes pretender que ser\u00e1s un experto despues   debes tener una cuenta de un sitio con git   deberias tener instalado git    </p>"},{"location":"es/git/#inicializando-mi-primer-repo","title":"inicializando mi primer repo","text":"<p>nuevo repo    </p> <pre><code>mkdir repo\ncd repo\ngit init\n</code></pre>"},{"location":"es/git/#quien-sos","title":"quien sos?","text":"<p>con la informaci\u00f3n que diste para crear la cuenta rellena estos comandos:    </p> <pre><code>git config --global user.name\ngit config --global user.email\n</code></pre> <p>haciendo nuestro primer cambio</p> <pre><code>git branch -M master\ntouch hola\necho 1 &gt; hola\ngit add hola\ngit commit -m \"primer lanzamiento publico de hola\"\n</code></pre>"},{"location":"es/git/#publicando-a-nuestro-repositorio","title":"publicando a nuestro repositorio","text":"<p>en nuestro github debemos crear un repositorio con el nombre que le queramos a\u00f1adir   quiero aclarar que yo utilizo github porque es el mas com\u00fan, pero es lo mismo para todos    </p> <pre><code>git remote add origin https://github.com/FPSensor/hola\ngit push -f -u origin HEAD:master\n</code></pre>"},{"location":"es/git/#primer-capitulo-completado-algunas-cosas-a-aclarar","title":"primer capitulo completado, algunas cosas a aclarar","text":"<p>1: queremos que seas explicito con los cambios, que se modifico, que archivo, que seccion de la fuente, absolutamente todo, incluso en la descripci\u00f3n deberias decir porque hiciste lo que hiciste.   2: no necesitas poner -m en git commit, si no a\u00f1ades -m se abrir\u00e1 el editor, esto es mejor para mensajes de commit largos.   3: ese comando largo de publicaci\u00f3n es solo para ramas nuevas, deberia haber otra manera pero si clonas el repositorio de nuevo un \"git push\" deberia ser suficiente.    </p>"},{"location":"es/git/#clonar-un-repositorio","title":"clonar un repositorio","text":"<p>tan simple como \"git clone LINK -b master Descargas/hola\"    </p>"},{"location":"es/git/#quien-hizo-esto","title":"quien hizo esto?","text":"<p>agarre un cambio de otra persona, como reconocer su trabajo?   en la comunidad de android no queremos gente que no a\u00f1ade los autores a los cambios y ser\u00e1s como basura para ellos (lo digo por experiencia)   debemos a\u00f1adir quien hizo esto.   esto ser\u00e1 aplicado para el cambio anterior, te ense\u00f1ar\u00e9 como hacerlo para otros commits mas adelante.    </p> <pre><code>git commit --amend --author=\"FPSensor &lt;gkartyt@gmail.com&gt;\"\n</code></pre> <p>pero como conseguimos esa informaci\u00f3n?   en el enlace del commit a\u00f1adir .patch al final   esto literalmente hara que el commit sea un archivo patch, algo de lo que hablaremos despues, pero el punto es:   lo podemos utilizar para obtener el autor, revisalo</p>"},{"location":"es/git/#i-want-a-cherry","title":"i want a cherry","text":"<p>un cherry-pick es literalmente cuando agarras commits de otro repositorio   para hacerlo es bastante simple   tenemos que inicializar el repositorio donde esta el commit y sus cambios con sus hash de commits    </p> <pre><code>git remote add cherrypick https://github.com/FPSensor/FPSensor\ngit fetch cherrypick\ngit cherry-pick hfwdhuwhfuiwuihfvuiwfhefhruifhfuihiuwe\n</code></pre> <p>puedes simplemente copiar el hash del commit   tengo que agarrar 300 commits, como lo hago?   cosas a tener en cuenta?   es un commit de inicio y un commit final, todo lo que este despues del commit inicial y antes del commit final sera agregado, no importa que sea    </p> <pre><code>git cherry-pick commit-1~..commit-300\n</code></pre> <p>oh, no   tenemos un conflicto de contexto en el archivo hola    </p> <p>como lo resolvemos?   un conflicto en git sucede cuando git no sabe que hacer ya que tu fuente y la fuente del otro repositorio antes del commit en cuesti\u00f3n son diferentes   esto es bastante simple    </p> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; tu fuente [HEAD]\n======= la source de el otro  repositorio mas el commit aplicado[HASH]\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; final del conflicto\n</code></pre> <p>no queremos aplicar un commit porque tiene demasiados conflictos y no tienes ganas de arreglarlos?    </p> <pre><code>git cherry-pick --ship\n</code></pre>"},{"location":"es/git/#continuara","title":"continuar\u00e1","text":""}]}